import{_ as l,c as t,a2 as n,j as s,a as e,G as d,B as p,o as h}from"./chunks/framework.e-bAZrdY.js";const D=JSON.parse('{"title":"Data","description":"","frontmatter":{},"headers":[],"relativePath":"api/data.md","filePath":"api/data.md"}'),r={name:"api/data.md"},k={tabindex:"0"};function o(u,i,g,E,y,m){const a=p("Badge");return h(),t("div",null,[i[11]||(i[11]=n(`<h1 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;Data&quot;">​</a></h1><p>To use the data values, add a reference to the carousel element and then get the values from the data property.</p><p>Example:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Carousel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myCarousel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; ... &lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myCarousel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Data can be accessed under data property</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (myCarousel.data.currentSlide </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Do your magic here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span></code></pre></div><h2 id="available-data" tabindex="-1">Available Data <a class="header-anchor" href="#available-data" aria-label="Permalink to &quot;Available Data&quot;">​</a></h2>`,6)),s("table",k,[i[10]||(i[10]=s("thead",null,[s("tr",null,[s("th",null,"Data"),s("th",null,"Description")])],-1)),s("tbody",null,[i[3]||(i[3]=s("tr",null,[s("td",null,[s("code",null,"config")]),s("td",null,"the current carousel configuration")],-1)),i[4]||(i[4]=s("tr",null,[s("td",null,[s("code",null,"slidesCount")]),s("td",null,"slides total count")],-1)),s("tr",null,[i[2]||(i[2]=s("td",null,[s("s",null,[s("code",null,"slideWidth")])],-1)),s("td",null,[i[0]||(i[0]=s("s",null,"single slide width",-1)),i[1]||(i[1]=e()),d(a,{type:"danger",text:"Rename to slideSize"})])]),i[5]||(i[5]=s("tr",null,[s("td",null,[s("code",null,"slideSize")]),s("td",null,"single slide width or height")],-1)),i[6]||(i[6]=s("tr",null,[s("td",null,[s("code",null,"currentSlide")]),s("td",null,"current slide index")],-1)),i[7]||(i[7]=s("tr",null,[s("td",null,[s("code",null,"maxSlide")]),s("td",null,"maximum slide index")],-1)),i[8]||(i[8]=s("tr",null,[s("td",null,[s("code",null,"minSlide")]),s("td",null,"minimum slide index")],-1)),i[9]||(i[9]=s("tr",null,[s("td",null,[s("code",null,"middleSlide")]),s("td",null,"middle slide index")],-1))])])])}const F=l(r,[["render",o]]);export{D as __pageData,F as default};
